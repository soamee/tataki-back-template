name: Lint, Test & Build
on:
  push:
    branches: [master, main, develop]
jobs:
  build:
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: service
          POSTGRES_PASSWORD: test
          POSTGRES_DB: servicetest
        ports:
        - 5433:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    name: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: set insecure variable
        run: |
          echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          npm install
      - name: Install sequelize-cli
        run: |
          sudo npm install sequelize-cli
      - name: Run linter
        run: |
          npm run lint
      - name: Run test
        run: |
          npm run test
      - name: "Automated Version Bump"
        uses: "soamee/gh-action-conventional-commits@v8.0.0"
        with:
          tag-prefix: ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Set $VERSION variable"
        run: |
          . ./ci/extract-version.sh
          echo ::set-env name=VERSION::$VERSION
          echo ::set-env name=DOCKER_CONTAINER_NAME::${{ secrets.DOCKER_CONTAINER_NAME }}
      # - name: Build Docker Image
      #   run: npm run docker:build
      # - uses: jwalton/gh-ecr-push@v1.0.0
      #   name: Push to Amazon ECR
      #   with:
      #     access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     region: eu-west-2
      #     image: ${{ secrets.DOCKER_CONTAINER_NAME }}:$VERSION
      - uses: 8398a7/action-slack@v2
        name: Build process finished - Notify slack
        with:
          status: ${{ job.status }}
          author_name: CI System
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
