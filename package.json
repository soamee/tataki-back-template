{
  "name": "api",
  "version": "0.6.20",
  "private": true,
  "scripts": {
    "start": "cross-env NODE_ENV=production node ./bin/www | pino-colada",
    "start:dev": "cross-env NODE_ENV=development nodemon LOG_LEVEL=debug ./bin/www | pino-colada",
    "start:test": "cross-env NODE_ENV=test nodemon LOG_LEVEL=debug ./bin/www | pino-colada",
    "start:staging": "cross-env NODE_ENV=staging nodemon LOG_LEVEL=debug ./bin/www | pino-colada",
    "start:production": "cross-env NODE_ENV=production nodemon LOG_LEVEL=debug ./bin/www | pino-colada",
    "db:migrate": "NODE_ENV=development sequelize-cli db:migrate",
    "db:migrate:test": "cross-env NODE_ENV=test sequelize-cli db:migrate",
    "db:migrate:staging": "cross-env NODE_ENV=staging sequelize-cli db:migrate",
    "db:migrate:production": "cross-env NODE_ENV=production sequelize-cli db:migrate",
    "db:migrate:reset": "sequelize-cli db:migrate:undo:all && npm run db:migrate",
    "db:migrate:undo:test": "cross-env NODE_ENV=test sequelize-cli db:migrate:undo:all",
    "db:migrate:reset:test": "cross-env NODE_ENV=test npm run db:migrate:undo:test && npm run db:migrate:test",
    "db:seed": "sequelize-cli db:seed:undo:all && sequelize-cli db:seed:all --debug",
    "db:seed:dev": "sequelize-cli db:seed:undo:all && sequelize-cli db:seed:all --debug",
    "db:seed:test": "cross-env NODE_ENV=test sequelize-cli db:seed:undo:all && cross-env NODE_ENV=test sequelize-cli db:seed:all --debug",
    "pretest": "rm -Rf reports && npm run db:migrate:reset:test",
    "test": "cross-env NODE_ENV=test jest --runInBand --detectOpenHandles --coverage --coverageDirectory=reports/coverage || :",
    "test:spec": "cross-env NODE_ENV=test jest --testNamePattern",
    "test:watch": "cross-env NODE_ENV=test jest --watch",
    "posttest": "mkdir -p reports/tests && mv jest_html_reporters.html reports/tests/index.html",
    "lint": "lint-staged",
    "lint:fix": "npx eslint . --fix",
    "infra:up": "docker-compose up -d",
    "infra:down": "docker-compose down",
    "docker:build": ". ./ci/extract-version.sh && echo $VERSION && docker build -t $DOCKER_CONTAINER_NAME:$VERSION .",
    "docker:build:patch": "npm version patch && git add . && git commit -m \"release(): patch version\" && source ./ci/extract-version.sh && echo $VERSION && docker build -t $DOCKER_CONTAINER_NAME:$VERSION .",
    "docker:build:minor": "npm version minor && git add . && git commit -m \"release(): minor version\" && source ./ci/extract-version.sh && echo $VERSION && docker build -t $DOCKER_CONTAINER_NAME:$VERSION .",
    "docker:build:major": "npm version major && git add . && git commit -m \"release(): major version\"  && source ./ci/extract-version.sh && echo $VERSION && docker build -t $DOCKER_CONTAINER_NAME:$VERSION .",
    "docker:tag-and-push": "source ../ci/extract-version.sh && docker tag $DOCKER_CONTAINER_NAME:$VERSION jmanzanomorilla/$DOCKER_CONTAINER_NAME:$VERSION && docker push jmanzanomorilla/$DOCKER_CONTAINER_NAME:$VERSION",
    "docker:run": "source ../ci/extract-version.sh && docker run -it -p 8080:80 $DOCKER_CONTAINER_NAME:$VERSION",
    "docker:release:patch": "yarn docker:build:patch && yarn docker:tag-and-push",
    "heroku-postbuild": "yarn db:migrate:production",
    "heroku:logs": "heroku logs --app immcode-api"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm test"
    }
  },
  "jest": {
    "testEnvironment": "node",
    "coveragePathIgnorePatterns": [
      "/node_modules/"
    ],
    "reporters": [
      "default",
      [
        "./node_modules/jest-html-reporters",
        {
          "pageTitle": "Test Report",
          "outputPath": "reports/tests/index.html"
        }
      ]
    ],
    "coverageReporters": [
      "html"
    ]
  },
  "dependencies": {
    "bcrypt": "^4.0.1",
    "cookie-parser": "~1.4.5",
    "cors": "^2.8.5",
    "cross-env": "^7.0.2",
    "debug": "^4.1.1",
    "dotenv": "^8.2.0",
    "dotenv-parse-variables": "^0.3.0",
    "express": "~4.17.1",
    "express-openapi-validator": "^4.3.6",
    "express-pino-logger": "^4.0.0",
    "express-rate-limit": "^5.1.1",
    "helmet": "^3.22.0",
    "http-errors": "^1.7.3",
    "http-status-codes": "^1.4.0",
    "jade": "^1.11.0",
    "joi": "^14.3.1",
    "jsonwebtoken": "^8.5.1",
    "module-alias": "^2.2.2",
    "nodemon": "^2.0.3",
    "pg": "^8.0.2",
    "pg-hstore": "^2.3.3",
    "pino": "^6.2.0",
    "pino-colada": "^1.6.1",
    "pino-pretty": "^4.0.0",
    "sequelize": "^5.21.6",
    "sqlite3": "^4.1.1",
    "underscore": "^1.10.2"
  },
  "devDependencies": {
    "chai": "^4.2.0",
    "child-process-promise": "^2.2.1",
    "eslint": "6.8.0",
    "eslint-config-airbnb": "18.1.0",
    "eslint-config-airbnb-base": "^14.1.0",
    "eslint-config-prettier": "^6.10.1",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-jsx-a11y": "^6.2.3",
    "eslint-plugin-prettier": "^3.1.3",
    "eslint-plugin-react": "^7.19.0",
    "eslint-plugin-security": "^1.4.0",
    "husky": "^4.2.5",
    "jest": "^25.3.0",
    "jest-html-reporters": "^1.2.1",
    "lint-staged": "^10.1.6",
    "prettier": "^1.18.2",
    "sequelize-cli": "^5.5.1",
    "supertest": "^4.0.2"
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ],
    "*.json": [
      "prettier --write",
      "git add"
    ]
  }
}
